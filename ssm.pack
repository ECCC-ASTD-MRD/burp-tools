#!/bin/ksh
set -ex

SCRIPT=`readlink -f $0`
SCRIPT_PATH=`dirname $SCRIPT`
cd $SCRIPT_PATH

export DEST=/ssm/net/cmda/base/master
export DEPOT=/ssm/.repo/cmda

# IMPORTANT: Please update at least Version, and BuildInfo date in .ssm.d/control file before running this script
export PKG_NAME=`grep Package ./.ssm.d/control | sed 's/Package://g' | sed 's/ *//g'`
export VERNO=`grep Version ./.ssm.d/control | sed 's/Version://g' | sed 's/ *//g'`

# Make sure platform in control file is correct
cp ./.ssm.d/control temp
sed "s/Platform:.*/Platform: $HOSTTYPE/g" temp > ./.ssm.d/control
rm -rf temp

export BINAIRE_SSM="${PKG_NAME}_${VERNO}_${ORDENV_PLAT}"

# compiler le package
cd src
./make.ksh

cd ../..
cp -rf trunk ${BINAIRE_SSM}
tar cvf ${BINAIRE_SSM}.tar ${BINAIRE_SSM}
gzip ${BINAIRE_SSM}.tar
mv ${BINAIRE_SSM}.tar.gz ${BINAIRE_SSM}.ssm

# install software
# (pipe to xargs echo is to avoid exiting on error if uninstall/unpublish fails)
echo "package = ${BINAIRE_SSM}"
#ssm unpublish -d $DEST  -p ${BINAIRE_SSM} --force | xargs echo
ssm uninstall -d $DEST  -p ${BINAIRE_SSM} --force | xargs echo
ssm install -d $DEST -u `pwd` -p ${BINAIRE_SSM}   --force
#ssm publish -d $DEST          -p ${BINAIRE_SSM}   --force

# keep a copy in repository
# scp because /ssm/.repo/cmda isn't mounted on hadar
scp ${BINAIRE_SSM}.ssm afsdcvs@joule:$DEPOT

