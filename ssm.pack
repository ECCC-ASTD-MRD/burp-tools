#!/bin/ksh
set -ex

SCRIPT=`readlink -f $0`
SCRIPT_PATH=`dirname $SCRIPT`
cd $SCRIPT_PATH

export DEST=/home/cmd_source/ssm/cmda
export DEPOT=/home/cmd_source/ssm/cmda_repository

export PKG_NAME=`grep Package ./.ssm.d/control | sed 's/Package://g' | sed 's/ *//g'`
export VERNO=`grep Version ./.ssm.d/control | sed 's/Version://g' | sed 's/ *//g'`

mtype=`uname -s`
case  $mtype  in
IRIX64 ) export HOSTTYPE=irix65-mips-n32 ;;
AIX    ) export HOSTTYPE=aix71-ppc7-64 ;;
Linux  ) export HOSTTYPE=linux26-i386 ;;
esac

# Make sure platform in control file is correct
cp ./.ssm.d/control temp
sed "s/Platform:.*/Platform: $HOSTTYPE/g" temp > ./.ssm.d/control

export BINAIRE_SSM="${PKG_NAME}_${VERNO}_${HOSTTYPE}"

# compiler le package en appellant compile.sh
./src/compile.sh

cd ..
cp -rf trunk ${BINAIRE_SSM}
tar cvf ${BINAIRE_SSM}.tar ${BINAIRE_SSM}
gzip ${BINAIRE_SSM}.tar
mv ${BINAIRE_SSM}.tar.gz ${BINAIRE_SSM}.ssm

# install software
# (pipe to xargs echo is to avoid exiting on error if uninstall/unpublish fails)
echo "package = ${BINAIRE_SSM}"
#ssm unpublish -d $DEST  -p ${BINAIRE_SSM} --force | xargs echo
ssm uninstall -d $DEST  -p ${BINAIRE_SSM} --force | xargs echo
ssm install -d $DEST -u `pwd` -p ${BINAIRE_SSM}   --force
#ssm publish -d $DEST          -p ${BINAIRE_SSM}   --force

# keep a copy in repository
cp -rf  ${BINAIRE_SSM}.ssm $DEPOT
